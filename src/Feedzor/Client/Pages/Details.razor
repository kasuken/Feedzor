@page "/details/{feedId}"
@using Feedzor.Shared
@inject HttpClient Http

@inject IFeedzorService IFeedzorService

<Loading IsLoading="model is null" LoadingText="Loading Feeds...">
    <div class="row mt-3 mb-3 ml-3">
        <div class="col">
            <h1>@model.FeedSource.Title</h1>
            <small>@model.FeedSource.Description</small>
        </div>
        <div class="col">
            <div class="float-right">
                <div class="btn-group btn-group-toggle">
                    <button value="Mark all as read" @onclick="onMarkAllAsRead">Mark all as read</button>
                </div>
                <div class="btn-group btn-group-toggle">
                    <label class="btn btn-light @(ViewType == "Title" ? "active" : "")" @onclick="onTitleViewClick">
                        <input type="radio" name="options" id="option1" /> Title
                    </label>
                    <label class="btn btn-light @(ViewType == "Magazine" ? "active" : "")" @onclick="onMagazineViewClick">
                        <input type="radio" name="options" id="option2" /> Magazine
                    </label>
                    <label class="btn btn-light @(ViewType == "Cards" ? "active" : "")" @onclick="onCardsViewClick">
                        <input type="radio" name="options" id="option3" /> Cards
                    </label>
                    <label class="btn btn-light @(ViewType == "Articles" ? "active" : "")" @onclick="onArticlesViewClick">
                        <input type="radio" name="options" id="option4" /> Articles
                    </label>
                </div>
            </div>
        </div>
    </div>

    @if (ViewType == "Title")
    {
        <TitleView Items="@model.Items" />
    }

    @if (ViewType == "Cards")
    {
        <CardView Items="@model.Items" />
    }

    @if (ViewType == "Magazine")
    {
        <MagazineView Items="@model.Items" />
    }

    @if (ViewType == "Articles")
    {
        <ArticleView Items="@model.Items" />
    }
</Loading>

@code {
    [Parameter]
    public string feedId { get; set; }

    private FeedDetailsPageModel model;
    private string ViewType;

    protected override async Task OnInitializedAsync()
    {
        model = await IFeedzorService.GetRssById(feedId);

        if (string.IsNullOrEmpty(ViewType))
        {
            onTitleViewClick();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        model = null;
        model = await IFeedzorService.GetRssById(feedId);
    }

    private async Task onMarkAllAsRead()
    {
        await Http.GetFromJsonAsync<FeedDetailsPageModel>($"Feedzor/MarkAsReadAll/{feedId}");
    }

    private void onTitleViewClick()
    {
        ViewType = "Title";
    }
    private void onCardsViewClick()
    {
        ViewType = "Cards";
    }
    private void onMagazineViewClick()
    {
        ViewType = "Magazine";
    }
    private void onArticlesViewClick()
    {
        ViewType = "Articles";
    }
}
