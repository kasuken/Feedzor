@page "/addrss"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Feedzor.Shared
@attribute [Authorize]
@inject HttpClient Http


@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudGrid>
    <MudItem xs="12" sm="12">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField T="string" Label="Title" Required="true" RequiredError="Title is required!"/>
                    <MudTextField T="string" Label="RSS url" @bind-Text=FeedUrl Required="true" RequiredError="RSS url is required!" />
            </MudForm>   
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>AddFeed())">Add</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.Reset())" Class="mx-2">Reset</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    bool success;
    string[] errors = { };
    MudForm form;

    
    private string FeedUrl { get; set; }

    public async Task AddFeed()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var item = new AddFeed() { Url = FeedUrl };

        await Http.PostAsJsonAsync("Feedzor/AddRss", item);
    }
}